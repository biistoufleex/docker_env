version:  '3.3'

services:      
  mysql:
    container_name: mysql
    image: mysql:8.0
    restart: on-failure
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    ports: 
      - 3306:3306
    expose: 
      - "3306"

  adminer:
    image: adminer
    restart: on-failure
    ports:
      - '${ADMINER_PORT}:8080'

  php:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    volumes:
      - '.:/usr/src/app'
    restart: on-failure
    env_file:
      - .env
    user: ${LOCAL_USER}

  nginx:
    image: nginx:1.19.0-alpine
    restart: on-failure
    volumes:
      - './public/:/usr/src/app'
      - './docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro'
    ports:
      - '${NGINX_PORT}:80'
    depends_on:
      - php
    
  elasticsearch:
    image: elasticsearch:7.7.0
    container_name: elasticsearch
    hostname: elasticsearch
    environment:
        - "discovery.type=single-node"
    ports:
        - 9200:9200
        - 9300:9300
    networks:
        - elknetwork

  kibana:
      image: kibana:7.7.0
      container_name: kibana
      hostname: kibana
      ports:
          - 5601:5601
      links:
          - elasticsearch:elasticsearch
      depends_on:
        - elasticsearch
      networks:
        - elknetwork

  logstash:
      image: logstash:7.7.0
      container_name: logstash
      hostname: logstash
      ports:
          - 9600:9600
          - 8089:8089
      volumes:
        - .\logstash:/usr/share/logstash/pipeline/
      links:
          - elasticsearch:elasticsearch
      depends_on:
        - elasticsearch
      networks:
        - elknetwork
networks:
    elknetwork:
        driver: bridge